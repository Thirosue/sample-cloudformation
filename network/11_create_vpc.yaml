AWSTemplateFormatVersion: '2010-09-09'
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "General Configuration"
        Parameters:
          - ServiceName
      -
        Label:
          default: "NetWork Configuration"
        Parameters:
          - VpcIp
          - SubnetIp1
          - SubnetIp2

Parameters:
  ServiceName:
    Description: "input your ServiceName."
    Type: String
    Default: "sample-app"
  VpcIp:
    Description: "input your VPC IP Range."
    Type: String
    Default: 172.16.0.0/16
  SubnetIp1:
    Description: "input your Subnet_1 IP Range."
    Type: String
    Default: 172.16.0.0/24
  SubnetIp2:
    Description: "input your Subnet_2 IP Range."
    Type: String
    Default: 172.16.1.0/24

Resources:
# ------------------------------------------------------------#
#  VPC
# ------------------------------------------------------------#         
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcIp
      EnableDnsSupport: 'false'
      EnableDnsHostnames: 'false'
      InstanceTenancy: dedicated
      Tags:
        - 
          Key: "Name"
          Value: !Join [" ", [ !Ref ServiceName, "vpc" ] ]

# ------------------------------------------------------------#
#  InterNetGateWay
# ------------------------------------------------------------#         
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - 
          Key: "Name"
          Value: !Join [" ", [ !Ref ServiceName, "igw" ] ]

  AttackInternetGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

# ------------------------------------------------------------#
#  Subnet
# ------------------------------------------------------------#         
  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: # get 1st Az
        !Select [0, !GetAZs '' ]
      CidrBlock: !Ref SubnetIp1
      VpcId: !Ref VPC
      Tags:
        - 
          Key: "Name"
          Value: !Join [" ", [ !Ref ServiceName, "Subnet", "1" ] ]

  PublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: # get 2nd Az
        !Select [1, !GetAZs '' ]
      CidrBlock: !Ref SubnetIp2
      VpcId: !Ref VPC
      Tags:
        - 
          Key: "Name"
          Value: !Join [" ", [ !Ref ServiceName, "Subnet", "2" ] ]

# ------------------------------------------------------------#
#  RouteTable
# ------------------------------------------------------------#         
  InternetGatewayRoute:
    Type: AWS::EC2::Route
    DependsOn: AttackInternetGateway
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties: 
      VpcId: !Ref VPC
      Tags:
        - 
          Key: "Name"
          Value: !Join [" ", [ !Ref ServiceName, "RouteTable" ] ]

  AttachSubnet1ToRouteTable: # RouteTable attach Subnet1
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref PublicSubnet1

  AttachSubnet2ToRouteTable: # RouteTable attach Subnet2 
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties: 
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref PublicSubnet2

# ------------------------------------------------------------#
#  FireWall
# ------------------------------------------------------------#         
  PublicFireWall:
    Type: AWS::EC2::SecurityGroup
    DependsOn: VPC
    Properties:
      GroupDescription: Public FireWall
      VpcId: !Ref VPC
      SecurityGroupIngress: #InBound Rule
      - IpProtocol: -1
        FromPort: 0
        ToPort: 0
        CidrIp: !Ref VpcIp
      - IpProtocol: -1
        FromPort: 0
        ToPort: 0
        CidrIp: 126.208.134.29/32
      SecurityGroupEgress: #OutBound Rule
      - IpProtocol: -1
        FromPort: 0
        ToPort: 0
        CidrIp: 0.0.0.0/0
      Tags:
        - 
          Key: "Name"
          Value: !Join [" ", [ !Ref ServiceName, "Public FireWall" ] ]

  InternalFireWall:
    Type: AWS::EC2::SecurityGroup
    DependsOn: VPC
    Properties:
      GroupDescription: Internal FireWall
      VpcId: !Ref VPC
      SecurityGroupIngress: #InBound Rule
      - IpProtocol: -1
        FromPort: 0
        ToPort: 0
        CidrIp: !Ref VpcIp
      SecurityGroupEgress: #OutBound Rule
      - IpProtocol: -1
        FromPort: 0
        ToPort: 0
        CidrIp: 0.0.0.0/0
      Tags:
        - 
          Key: "Name"
          Value: !Join [" ", [ !Ref ServiceName, "Internal FireWall" ] ]